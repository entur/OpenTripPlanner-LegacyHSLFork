{{- if .Values.cronjobRedeployGraphBuilder.enabled}}
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  labels:
    app: graph-builder
    version: {{ .Chart.Version }}
    team: {{ .Values.team }}
    slack: {{ .Values.slack }}
    type: {{ .Values.type }}
    chart: {{ .Chart.Name }}
    release: {{ .Release.Name }}
  name: graph-builder
  namespace: {{ .Release.Namespace }}
spec:
  concurrencyPolicy: Forbid
  failedJobsHistoryLimit: 1
  jobTemplate:
    spec:
      template:
        metadata:
          annotations:
            prometheus.io/path: /metrics
            prometheus.io/port: "9779"
            prometheus.io/scrape: "true"
        spec:
          containers:
          - command:
              - "java"
            args:
              - "-server"
              - "-Xms512m"
              - "-Xmx16g"
              - "-XX:MaxGCPauseMillis=5000"
              - "-javaagent:/opt/agent-bond/agent-bond.jar=jolokia{{`{{host=0.0.0.0}}`}},jmx_exporter{{`{{9779:/opt/agent-bond/jmx_exporter_config.yml}}`}}"
              - "-Dfile.encoding=UTF-8"
              - "-jar"
              - "otp-shaded.jar"
              - "$(OTP_SKIP_TRANSIT)"
              - "$(OTP_LOAD_BASE_GRAPH)"
              - "--build"
              - "/etc/application-config"
            env:
            - name: TZ
              value: Europe/Oslo
            image: {{ .Values.cronjobRedeployGraphBuilder.image }}:{{ .Chart.AppVersion }}
            imagePullPolicy: {{ .Values.cronjobRedeployGraphBuilder.imagePullPolicy }}
            livenessProbe:
              failureThreshold: 3
              httpGet:
                path: /metrics
                port: 9779
                scheme: HTTP
              initialDelaySeconds: 30
              periodSeconds: 10
              successThreshold: 1
              timeoutSeconds: 30
            name: graph-builder
            readinessProbe:
              failureThreshold: 3
              httpGet:
                path: /metrics
                port: 9779
                scheme: HTTP
              initialDelaySeconds: 30
              periodSeconds: 10
              successThreshold: 1
              timeoutSeconds: 20
            resources:
              limits:
                cpu: {{ .Values.cronjobRedeployGraphBuilder.resources.cpuLimit }}
                memory: {{ .Values.cronjobRedeployGraphBuilder.resources.memLimit }}
              requests:
                cpu: {{ .Values.cronjobRedeployGraphBuilder.resources.cpuRequest }}
                memory: {{ .Values.cronjobRedeployGraphBuilder.resources.memRequest }}
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /etc/marduk/
              name: marduk-key
            - mountPath: /etc/application-config
              name: application-config
              readOnly: true
          dnsPolicy: ClusterFirst
          imagePullSecrets:
          - name: rutebanken-registry-key
          restartPolicy: Never
          schedulerName: default-scheduler
          securityContext: {}
          terminationGracePeriodSeconds: 30
          volumes:
          - name: marduk-key
            secret:
              defaultMode: 420
              secretName: {{ .Values.cronjobRedeployGraphBuilder.mardukStorageSecretName }}
          - configMap:
              defaultMode: 420
              name: graph-builder
            name: application-config
  # the cron job should never run as it is used only as a template for creating new jobs.
  schedule: 0 0 1 1 0
  successfulJobsHistoryLimit: 1
  # the cron job should never run as it is used only as a template for creating new jobs.
  suspend: true
{{end}}