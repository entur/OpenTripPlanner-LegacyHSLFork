apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "otp.name" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "common.labels" . | indent 4 }}
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      {{- include "common.labels" . | indent 6 }}
  strategy:
    rollingUpdate:
      maxSurge: {{ .Values.rollingUpdate.maxSurge }}
      maxUnavailable: {{ .Values.rollingUpdate.maxUnavailable }}
    type: RollingUpdate
  template:
    metadata:
      labels:
        {{- include "common.labels" . | indent 8 }}
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - {{ template "otp.name" . }}
                topologyKey: kubernetes.io/hostname
              weight: 100
      containers:
        - command:
            - /docker-entrypoint.sh
            - java
            - -Dfile.encoding=UTF-8
            - -Dtransmodel.graphql.api.agency.id=RB
            - -Xms{{ .Values.resources.xms }}
            - -Xmx{{ .Values.resources.xmx }}
            - -server
            - -Dcom.sun.management.jmxremote
            - -Dcom.sun.management.jmxremote.port=9010
            - -Dcom.sun.management.jmxremote.local.only=false
            - -Dcom.sun.management.jmxremote.authenticate=false
            - -Dcom.sun.management.jmxremote.ssl=false
            - -javaagent:/opt/agent-bond/agent-bond.jar=jolokia{{`{{host=0.0.0.0}}`}},jmx_exporter{{`{{9779:/opt/agent-bond/jmx_exporter_config.yml}}`}}
            - -jar
            - otp-shaded.jar
            - --server
            - --graphs
            - /code/otpdata
            - --router
            - norway
          env:
            - name: TZ
              value: Europe/Oslo
            - name: MARDUK_GCP_BASE
              value: {{ .Values.environmentValues.mardukGcpBaseName }}
            - name: ROUTER_CONFIG
              value: {{ .Values.environmentValues.routerConfigName }}
          image: {{ .Values.image.repo }}:{{ .Chart.AppVersion }}
          imagePullPolicy: {{ .Values.image.imagePullPolicy }}
          lifecycle:
            preStop:
              exec:
                command:
                  - sleep
                  - '10'
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /otp/routers/ready
              port: {{ .Values.service.internalPort }}
              scheme: HTTP
            initialDelaySeconds: 900
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 30
          name: otp
          ports:
            - containerPort: {{ .Values.service.internalPort }}
              protocol: TCP
              name: http
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /otp/routers/ready
              port: {{ .Values.service.internalPort }}
              scheme: HTTP
            initialDelaySeconds: 120
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 20
          resources:
            limits:
              cpu: {{ .Values.resources.cpuLimit }}
              memory: {{ .Values.resources.memLimit }}
            requests:
              cpu: {{ .Values.resources.cpuRequest }}
              memory: {{ .Values.resources.memRequest }}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            {{- range .Values.secretMounts }}
            - name: {{ .name }}
              mountPath: {{ .mountPath }}
              subPath: {{ .subPath }}
              readOnly: {{ .readOnly }}
            {{- end }}
            {{- range .Values.configmapMounts }}
            - name: {{ .name }}
              mountPath: {{ .mountPath }}
              subPath: {{ .subPath }}
              readOnly: {{ .readOnly }}
            {{- end }}
      dnsPolicy: ClusterFirst
      {{- if .Values.image.imagePullSecrets.enabled  }}
      imagePullSecrets:
        - name: {{ .Values.image.imagePullSecrets.name }}
      {{- end }}
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      {{- range .Values.secretMounts }}
        - name: {{ .name }}
          secret:
            secretName: {{ .secretName }}
      {{- end }}
      {{- range .Values.configmapMounts }}
        - name: {{ .name }}
          configMap:
            name: {{ .configMap }}
      {{- end }}