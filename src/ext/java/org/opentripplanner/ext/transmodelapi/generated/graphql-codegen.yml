schema: ../../../../../../graphql/transmodelapi/schema.graphql

generates:
  TransmodelGraphQLTypes.java:
    plugins:
      - add:
          content: // THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.
      - java
    config:
      className: TransmodelGraphQLTypes
  TransmodelGraphQLDataFetchers.java:
    plugins:
      - add:
          content: //THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.
      - java-resolvers
    config:
      className: TransmodelGraphQLDataFetchers
      typesPrefix: TransmodelGraphQL

config:
  package: org.opentripplanner.ext.transmodelapi.generated
  strictScalars: true
  listType: java.util.List
  namingConvention:
    enumValues: change-case-all#upperCase
  scalars:
    Coordinates: org.locationtech.jts.geom.Coordinate[]
    Date: java.time.LocalDate
    DateTime: Long
    DoubleFunction: org.opentripplanner.routing.api.request.framework.DoubleAlgorithmFunction
    ID: String
    LocalTime: java.time.LocalTime
    Long: Long
    Time: Integer
  mappers:
    Authority: org.opentripplanner.transit.model.organization.Agency#Agency
    BikePark: org.opentripplanner.routing.vehicle_parking.VehicleParking#VehicleParking
    BikeRentalStation: org.opentripplanner.routing.vehicle_rental.VehicleRentalStation#VehicleRentalStation
    BookingArrangement: org.opentripplanner.model.BookingInfo#BookingInfo
    Branding: org.opentripplanner.transit.model.organization.Branding#Branding
    Contact: org.opentripplanner.transit.model.organization.ContactInfo#ContactInfo
    DatedServiceJourney: org.opentripplanner.transit.model.timetable.TripOnServiceDate#TripOnServiceDate
    DestinationDisplay: org.opentripplanner.model.TripTimeOnDate#TripTimeOnDate
    EstimatedCall: org.opentripplanner.model.TripTimeOnDate#TripTimeOnDate
    GroupOfLines: org.opentripplanner.transit.model.network.GroupOfRoutes#GroupOfRoutes
    Interchange: org.opentripplanner.model.transfer.ConstrainedTransfer#ConstrainedTransfer
    JourneyPattern: org.opentripplanner.transit.model.network.TripPattern#TripPattern
    Leg: org.opentripplanner.model.plan.Leg#Leg
    Line: org.opentripplanner.transit.model.network.Route#Route
    MultilingualString: java.util.Map#Map.Entry<String, String>
    Notice: org.opentripplanner.transit.model.basic.Notice#Notice
    Operator: org.opentripplanner.transit.model.organization.Operator#Operator
    PageInfo: graphql.relay.PageInfo#PageInfo
    PathGuidance: org.opentripplanner.model.plan.WalkStep#WalkStep
    Place: org.opentripplanner.model.plan.Place#Place
    PlaceAtDistance: org.opentripplanner.routing.graphfinder.PlaceAtDistance#PlaceAtDistance
    PlaceInterface: java.lang.Object#Object
    PointsOnLink: org.opentripplanner.framework.geometry.EncodedPolyline#EncodedPolyline
    Presentation: org.opentripplanner.transit.model.network.Route#Route
    PtSituationElement: org.opentripplanner.routing.alertpatch.TransitAlert#TransitAlert
    Quay: org.opentripplanner.transit.model.site.StopLocation#StopLocation
    QuayAtDistance: org.opentripplanner.routing.graphfinder.NearbyStop#NearbyStop
    RentalVehicle: org.opentripplanner.routing.vehicle_rental.VehicleRentalVehicle#VehicleRentalVehicle
    RentalVehicleType: org.opentripplanner.routing.vehicle_rental.RentalVehicleType#RentalVehicleType
    RoutingError: org.opentripplanner.routing.api.response.RoutingError#RoutingError
    RoutingParameters: org.opentripplanner.routing.api.request.preference.RoutingPreferences#RoutingPreferences
    ServerInfo: org.opentripplanner.model.projectinfo.OtpProjectInfo#OtpProjectInfo
    ServiceJourney: org.opentripplanner.transit.model.timetable.Trip#Trip
    StopPlace: org.opentripplanner.ext.transmodelapi.model.stop.MonoOrMultiModalStation#MonoOrMultiModalStation
    StopToStopGeometry: org.opentripplanner.ext.transmodelapi.model.util.EncodedPolylineBeanWithStops#EncodedPolylineBeanWithStops
    SystemNotice: org.opentripplanner.model.SystemNotice#SystemNotice
    TariffZone: org.opentripplanner.transit.model.site.FareZone#FareZone
    TimeAndDayOffset: java.lang.Integer#Integer
    TimetabledPassingTime: org.opentripplanner.model.TripTimeOnDate#TripTimeOnDate
    TransportModeSlackType: org.opentripplanner.ext.transmodelapi.model.TransportModeSlack#TransportModeSlack
    Trip: org.opentripplanner.ext.transmodelapi.model.PlanResponse#PlanResponse
    TripPattern: org.opentripplanner.model.plan.Itinerary#Itinerary
    TripSearchData: org.opentripplanner.routing.api.response.TripSearchMetadata#TripSearchMetadata
    ValidityPeriod: org.apache.commons.lang3.tuple.Pair#Pair<Long, Long>
    debugOutput: org.opentripplanner.api.resource.DebugOutput#DebugOutput
    infoLink: org.opentripplanner.routing.alertpatch.AlertUrl#AlertUrl
    placeAtDistanceConnection: graphql.relay.Connection#Connection<PlaceAtDistance>
    placeAtDistanceEdge: graphql.relay.Edge#Edge<PlaceAtDistance>
    quayAtDistanceConnection: graphql.relay.Connection#Connection<NearbyStop>
    quayAtDistanceEdge: graphql.relay.Edge#Edge<NearbyStop>
    WheelchairBoarding: org.opentripplanner.transit.model.basic.Accessibility#Accessibility
    InterchangeWeighting: Integer
    BikesAllowed: org.opentripplanner.transit.model.network.BikeAccess#BikeAccess
    ReportType: String
    Severity: String
    StopCondition: org.opentripplanner.routing.alertpatch.StopCondition#StopCondition
    RealtimeState: org.opentripplanner.transit.model.timetable.RealTimeState#RealTimeState
    OccupancyStatus: org.opentripplanner.transit.model.timetable.OccupancyStatus#OccupancyStatus
    VertexType: org.opentripplanner.model.plan.VertexType#VertexType
    InterchangePriority: org.opentripplanner.model.transfer.TransferPriority#TransferPriority
    StreetMode: org.opentripplanner.routing.api.request.StreetMode#StreetMode
    Mode: Object
    TransportMode: org.opentripplanner.transit.model.basic.TransitMode#TransitMode
    RelativeDirection: org.opentripplanner.model.plan.RelativeDirection#RelativeDirection
    AbsoluteDirection: org.opentripplanner.model.plan.AbsoluteDirection#AbsoluteDirection
    Locale: String
    MultiModalMode: String
    TransportSubmode: org.opentripplanner.ext.transmodelapi.model.TransmodelTransportSubmode#TransmodelTransportSubmode
    FilterPlaceType: org.opentripplanner.ext.transmodelapi.model.TransmodelPlaceType#TransmodelPlaceType
    BicycleOptimisationMethod: org.opentripplanner.routing.core.BicycleOptimizeType#BicycleOptimizeType
    DirectionType: org.opentripplanner.transit.model.timetable.Direction#Direction
    BookingMethod: org.opentripplanner.model.BookingMethod#BookingMethod
    ServiceAlteration: org.opentripplanner.transit.model.timetable.TripAlteration#TripAlteration
    ArrivalDeparture: org.opentripplanner.routing.stoptimes.ArrivalDeparture#ArrivalDeparture
    RoutingErrorCode: org.opentripplanner.routing.api.response.RoutingErrorCode#RoutingErrorCode
    InputField: org.opentripplanner.routing.api.response.InputField#InputField
    PurchaseWhen: String
    AlternativeLegsFilter: org.opentripplanner.routing.alternativelegs.AlternativeLegsFilter#AlternativeLegsFilter
